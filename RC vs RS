The ReplicationController and ReplicaSet are both Kubernetes objects that ensure a specified number of pod replicas are running,
but ReplicaSet is the newer and more powerful version. Here is a clear breakdown of their differences:

# Purpose (Same for Both)
Feature	Description
Primary Function	Ensure a fixed number of pod replicas are running.
Self-Healing	Automatically replaces failed or terminated pods.

# ReplicationController vs ReplicaSet
Feature	                  ReplicationController (RC)	                        ReplicaSet (RS)
Status	                  Legacy / Deprecated	                               Current / Recommended
Label Selector Type       Only exact match selectors	                       Supports set-based and exact selectors
Use with Deployment	  Not supported	                                       Fully supported
Kubernetes Version	  Introduced early (v1.0)	                       Introduced in v1.2+

Field
kind: ReplicationController	       apiVersion: v1
kind: ReplicaSet                  apiVersion: apps/v1

Usage Recommendation	Avoid using in modern workloads	Use only via Deployment (direct use is rare)

# Example of Selector Difference
ReplicationController (only equality-based):


selector:
  app: nginx

ReplicaSet (set-based supported):


selector:
  matchLabels:
    app: nginx
  matchExpressions:
    - key: tier
      operator: In
      values:
        - frontend
        - backend

# Modern Practice
You typically donâ€™t use ReplicaSet directly either. Instead, use a Deployment, which manages ReplicaSets for you and adds rolling updates, rollback, etc.


apiVersion: apps/v1
kind: Deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:1.25
# Summary
Use Case	                                 Recommendation
Legacy system	                             ReplicationController
New workloads                              (direct RS) Rarely used
Best practice	                                 Use Deployment
